/**
 * This file was auto-generated by the Titanium Module SDK helper for Android
 * Appcelerator Titanium Mobile
 * Copyright (c) 2009-2013 by Appcelerator, Inc. All Rights Reserved.
 * Licensed under the terms of the Apache Public License
 * Please see the LICENSE included with this distribution for details.
 *
 */
package com.kangacoders.tidetailscroll;

import org.appcelerator.kroll.KrollDict;
import org.appcelerator.kroll.KrollModule;
import org.appcelerator.kroll.annotations.Kroll;

import org.appcelerator.titanium.TiApplication;
import org.appcelerator.titanium.proxy.TiViewProxy;
import org.appcelerator.titanium.util.TiConvert;

import android.app.Activity;
import android.util.DisplayMetrics;

import com.kangacoders.tidetailscroll.KangaScrollView.TiVerticalScrollView;

@Kroll.module(name = "Tidetailscroll", id = "com.kangacoders.tidetailscroll")
public class TidetailscrollModule extends KrollModule implements
		ScrollViewListener {

	// Standard Debugging variables
	private static final String TAG = "TidetailscrollModule";

	private static DisplayMetrics metrics = new DisplayMetrics();

	private KangaScrollViewProxy scroll_view;
	private TiViewProxy resize_view;
	private TiViewProxy blur_view;
	private Float minimum;
	private Float maximum;

	// You can define constants with @Kroll.constant, for example:
	// @Kroll.constant public static final String EXTERNAL_NAME = value;

	public TidetailscrollModule() {
		super();
	}

	@Kroll.onAppCreate
	public static void onAppCreate(TiApplication app) {
		
	}

	// Methods
	@Kroll.method
	public void bind_views(KrollDict _params) {
		TiApplication appContext = TiApplication.getInstance();
		Activity activity = appContext.getCurrentActivity();
		activity.getWindowManager().getDefaultDisplay().getMetrics(metrics);
		
		scroll_view = (KangaScrollViewProxy) _params.get("scroll_view");
		resize_view = (TiViewProxy) _params.get("resize_view");
		minimum = TiConvert.toFloat(_params.get("minimum"));
		maximum = TiConvert.toFloat(_params.get("maximum"));

		if (_params.get("resize_view") != null) {
			blur_view = (TiViewProxy) _params.get("blur_wrapper");
		}

		TiVerticalScrollView _scroll_view = (TiVerticalScrollView) scroll_view
				.getNativeView();

		_scroll_view.setScrollViewListener(this);
	}

	public void onScrollChanged(TiVerticalScrollView scrollView, int x, int y,
			int oldx, int oldy) {
		
		float _new_height = maximum - y / metrics.density;

		if (_new_height >= minimum && _new_height <= maximum) {
			resize_view.setHeight(_new_height);
			blur_view.getOrCreateView().setOpacity(
					(float) (((maximum - minimum) - (_new_height - minimum))
							/ (maximum - minimum) * 1.0));
		}
	}
}
